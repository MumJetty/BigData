
======================================

(4/10)

------------------------------------------------------

### 작업형2 예시 문제 (타이타닉) 

# 아래는 타이타닉호 탑승자 생존과 관련한 데이터. 주어진 데이터를 이용하여 예측모형 만들고 CSV파일 생성하시오

# (가) 제공 데이터 목록 
  #(1) titanic3_y_train.csv : 탑승자의 생존 여부 데이터(학습용), csv 형식의 파일 
  #(2) titanic3_X_train.csv , titanic3_X_test.csv : 탑승자의 주요 속성 (학습용 및 평가용), csv 형식의 파일 

# (나) 데이터 형식 및 내용 
  #(1) titanic3_y_train.csv (785명 데이터) 
       # ID : 각 탑승자 고유번호 // survived : 생존 여부 (0: 사망 , 1: 생존) 
  #(2) titanic3_X_train.csv (785명 학습용 데이터) , titanic3_X_test.csv (524명 평가용 데이터)  

# 탑승자 785명에 대한 학습용 데이터(titanic3_y_train.csv , titanic3_X_train.csv)를 이용하여 , 생존 여부 예측모형을 만든 후 
# 이를 평가용 데이터(titanic3_X_test.csv)에 적용하여 얻은 524명 탑승자의 생존 여부 예측값을 CSV 파일로 생성하시오. 
# (제출한 모델의 성능은 F1-score 평가지표에 따라 채점) 

# <제출형식> 
# ID : 각 탑승자의 고유번호 // survived : 생존 여부 (0: 사망 , 1: 생존)  

# <유의사항>
# 성능이 우수한 예측모형을 구축하기 위해서 
# 적절한 데이터 전처리 , Feature Engineering , 분류 알고리즘 사용 , 초매개변수 최적화 , 모형 앙상블 등 수반


import pandas as pd

X_train = pd.read_csv(r'C:\빅데이터분석기사 실기 모의고사\data\모의고사\01회/titanic3_X_train.csv')
X_test = pd.read_csv(r'C:\빅데이터분석기사 실기 모의고사\data\모의고사\01회/titanic3_X_test.csv')
y_train = pd.read_csv(r'C:\빅데이터분석기사 실기 모의고사\data\모의고사\01회/titanic3_y_train.csv')

print(X_train.head())
print(X_test.head())
print(y_train.head())

print(X_train.info())
print(X_test.info())
print(y_train.info())

print(X_train.describe())
print(X_test.describe())
print(y_train.describe())


ID = X_test['ID'].copy()

X_train = X_train.drop(columns = ['ID','name'])
X_test = X_test.drop(columns = ['ID','name'])
y_train = y_train.drop(columns = ['ID'])

X_train.isna().sum()
X_test.isna().sum() 


# 결측일 조건 
cond_na = X_train['age'].isna() 


# 피어슨 상관계수: +1이면 양의 상관관계, -1이면 음의 상관관계, 0의 경우 상관관계 갖지 않음

from scipy.stats import pearsonr 
pearsonr(y_train['survived'][~cond_na],X_train['age'][~cond_na])

# age는 탑승자의 나이를 의미하고 survived와 상관관계가 낮으므로 컬럼을 삭제 
X_train = X_train.drop('age', axis = 1) 
X_test = X_test.drop('age', axis = 1) 


# 교재풀이 때문에 확인해 봄
y_train.isna().sum()

cond_na = X_train['fare'].isna() 

X_train = X_train[~cond_na]
y_train = y_train[~cond_na]













------------------------------------------------------











------------------------------------------------------

# 작업형 1 예시 문제 
# mtcars 데이터셋(data/mtcars)의 qsec컬럼을 최소최대 척도 (Min-Max Scale)로 변환한 후 0.5보다 큰 값을 가지는 레코드 수를 구하시오. 
# dataset 위치 : data/mtcars.csv  

import pandas as pd 
import numpy as np 

df1 = pd.read_csv(r'C:/빅데이터분석기사 실기 모의고사/불러오기 파일들/mtcars.csv')
print(df1)

print(df1['qsec'].head(3))

from sklearn.preprocessing import minmax_scale 

df1['qsec'] = minmax_scale(df1['qsec'])

print(df1['qsec'].head(3)) 

print(df1['qsec'] > 0.5)
# True값만 더해서 결과값 반환 

# 최종제출 전에 중간에 한 프린트문은 주석 처리 
# 주석처리 단축키 : 컨트롤 슬러시  


# 방법2

# 자체적으로 함수 만들기 

def minmax(df1) : 
    df1 = (df1 - min(df1)) / (max(df1) - min(df1))
    return df1  

df1['qsec'] = minmax(df1['qsec'])

print(df1['qsec'].head(3)) 

print(df1[df1['qsec'] > 0.5]) 

print(len(df1[df1['qsec'] > 0.5]))


------------------------------------------------------
-.
pd.read_csv 하고 괄호 안에
앞에 r 붙여주기

exam1=pd.read_csv(r'C:\빅데이터분석기사 실기 모의고사\data\모의고사\01회\iris.csv') 

-. 비쥬얼스튜디오코드에서 작업판 만들 때 
뒤에 확장자 .ipynb로 저장 
------------------------------------------------------

======================================
